{"version":3,"sources":["routes-navbar/NavBar.js","Api.js","forms/SearchForm.js","MainSearch.js","Home.js","SearchCompany.js","UserContext.js","SearchJob.js","Alert.js","forms/LoginForm.js","forms/SignupForm.js","forms/EditProfileForm.js","routes-navbar/Routes.js","hooks/useLocalStorage.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","currentUser","logout","Navbar","expand","color","exact","to","className","Nav","navbar","NavItem","onClick","BASE_URL","process","JoblyApi","endpoint","data","method","url","headers","Authorization","token","params","axios","message","response","error","Array","isArray","name","this","request","res","companies","handle","company","title","jobs","id","job","username","user","SearchForm","searchFor","useState","search","setSearch","Form","onSubmit","e","preventDefault","trim","undefined","FormGroup","Label","htmlFor","Input","placeholder","value","onChange","target","Button","type","MainSearch","getCompanies","getJobs","Card","CardBody","CardTitle","map","ListGroup","ListGroupItem","Home","SearchCompany","cantFind","useParams","find","filter","companyHandle","CardSubtitle","tag","description","j","UserContext","React","createContext","SearchJob","useContext","hasAppliedToJob","applyToJob","applied","setApplied","a","useEffect","parseInt","salary","equity","disabled","Alert","messages","role","LoginForm","login","history","useHistory","password","formData","setFormData","formErrors","setFormErrors","handleSubmit","result","success","push","errors","handleChange","autoComplete","required","length","SignupForm","signup","firstName","lastName","email","EditProfileForm","INITIAL_STATE","saveConfirmed","setSaveConfirmed","profileData","saveProfile","updatedUser","console","log","f","Routes","isLoading","setIsLoading","setCompanies","setJobs","path","useLocalStorage","key","firstValue","initialValue","localStorage","getItem","item","setItem","removeItem","App","infoLoaded","setInfoLoaded","Set","applicationIds","setApplicationIds","setCurrentUser","setToken","loginData","signupData","jwt","decode","getCurrentUser","applications","has","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ef0cc14.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./NavBar.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\n\n/** Navigation bar that changes according to currentUser. */\n\nconst NavBar = ({ currentUser, logout }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar expand=\"md\" color=\"light\">\n\t\t\t\t<NavLink exact to=\"/\" className=\"navbar-welcome\">\n\t\t\t\t\tJobly\n\t\t\t\t</NavLink>\n\t\t\t\t{currentUser && (\n\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t\t\t<NavItem className=\"navbar-link\">\n\t\t\t\t\t\t\t<NavLink to=\"/companies\">Companies</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<NavItem className=\"navbar-link\">\n\t\t\t\t\t\t\t<NavLink to=\"/jobs\">Jobs</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<NavItem className=\"navbar-link\">\n\t\t\t\t\t\t\t<NavLink to=\"/profile\">Profile</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<NavItem className=\"navbar-link\">\n\t\t\t\t\t\t\t<NavLink to=\"/\" onClick={logout}>\n\t\t\t\t\t\t\t\tLog Out\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t</Nav>\n\t\t\t\t)}\n\t\t\t\t{!currentUser && (\n\t\t\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t\t\t<NavItem className=\"navbar-link\">\n\t\t\t\t\t\t\t<NavLink to=\"/login\">Log In</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t<NavItem className=\"navbar-link\">\n\t\t\t\t\t\t\t<NavLink to=\"/signup\">Sign Up</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t</Nav>\n\t\t\t\t)}\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n};\n\nexport default NavBar;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class. Static class tying together methods used to get/send to the API. */\n\nclass JoblyApi {\n\t// the token to interact with the API is stored here.\n\tstatic token;\n\n\tstatic async request (endpoint, data = {}, method = \"get\") {\n\t\tconst url = `${BASE_URL}/${endpoint}`;\n\t\tconst headers = { Authorization: `Bearer ${JoblyApi.token}` };\n\t\tconst params = method === \"get\" ? data : {};\n\n\t\ttry {\n\t\t\treturn (await axios({ url, method, data, params, headers })).data;\n\t\t} catch (err) {\n\t\t\tlet message = err.response.data.error.message;\n\t\t\tthrow Array.isArray(message) ? message : [ message ];\n\t\t}\n\t}\n\n\t/** Get companies filtered by name, and single company filtered by handle. */\n\n\tstatic async getCompanies (name) {\n\t\tlet res = await this.request(\"companies\", { name });\n\t\treturn res.companies;\n\t}\n\n\tstatic async getCompany (handle) {\n\t\tlet res = await this.request(`companies/${handle}`);\n\t\treturn res.company;\n\t}\n\n\t/** Get jobs filtered by title, and single job fintered by id. */\n\n\tstatic async getJobs (title) {\n\t\tlet res = await this.request(\"jobs\", { title });\n\t\treturn res.jobs;\n\t}\n\n\tstatic async getJob (id) {\n\t\tlet res = await this.request(`jobs/${id}`);\n\t\treturn res.job;\n\t}\n\n\t/** Get current user */\n\n\tstatic async getCurrentUser (username) {\n\t\tlet res = await this.request(`users/${username}`);\n\t\treturn res.user;\n\t}\n\n\t/** Get token for login from username, password. */\n\n\tstatic async login (data) {\n\t\tlet res = await this.request(`auth/token`, data, \"post\");\n\t\treturn res.token;\n\t}\n\n\t/** Signup for site. */\n\n\tstatic async signup (data) {\n\t\tlet res = await this.request(`auth/register`, data, \"post\");\n\t\treturn res.token;\n\t}\n\n\t/** Save user profile page. */\n\n\tstatic async saveProfile (username, data) {\n\t\tlet res = await this.request(`users/${username}`, data, \"patch\");\n\t\treturn res.user;\n\t}\n\n\t/** Apply to a job */\n\n\tstatic async applyToJob (username, id) {\n\t\tawait this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n\t}\n}\nexport default JoblyApi;\n","import React, { useState } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport \"./SearchForm.css\";\n\n/** Search form to filter out companies and jobs, located on MainSearch page for both components. */\n\nconst SearchForm = ({ searchFor }) => {\n\tconst [ search, setSearch ] = useState(\"\");\n\n\tconst handleSubmit = (e) => {\n\t\t// take care of accidentally trying to search for just spaces\n\t\te.preventDefault();\n\t\tsearchFor(search.trim() || undefined);\n\t\tsetSearch(search.trim());\n\t};\n\n\tconst handleChange = (e) => {\n\t\tsetSearch(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"SearchForm\">\n\t\t\t<Form className=\"form-inline\" onSubmit={handleSubmit}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"search\" />\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName=\"form-control flex-grow-1\"\n\t\t\t\t\t\tname=\"search\"\n\t\t\t\t\t\tplaceholder=\"Enter search term..\"\n\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Button type=\"submit\" className=\"btn btn-success\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</FormGroup>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardBody, ListGroup, ListGroupItem, CardTitle } from \"reactstrap\";\nimport \"./MainSearch.css\";\nimport SearchForm from \"./forms/SearchForm\";\n\n/* Main search changes according to data type. */\n\nconst MainSearch = ({ companies, getCompanies, jobs, getJobs }) => {\n\treturn (\n\t\t<section className=\"MainSearch\">\n\t\t\t<Card>\n\t\t\t\t<CardBody>\n\t\t\t\t\t{companies && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">\n\t\t\t\t\t\t\t\t<SearchForm searchFor={getCompanies} />\n\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t{companies.map((company) => (\n\t\t\t\t\t\t\t\t<ListGroup key={company.handle}>\n\t\t\t\t\t\t\t\t\t<Link to={`/companies/${company.handle}`} key={company.handle}>\n\t\t\t\t\t\t\t\t\t\t<ListGroupItem key={company.handle}>\n\t\t\t\t\t\t\t\t\t\t\t{company.name}\n\t\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t))}{\" \"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{jobs && (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">\n\t\t\t\t\t\t\t\t<SearchForm searchFor={getJobs} />\n\t\t\t\t\t\t\t</CardTitle>\n\n\t\t\t\t\t\t\t{jobs.map((job) => (\n\t\t\t\t\t\t\t\t<ListGroup key={job.title}>\n\t\t\t\t\t\t\t\t\t<Link to={`/jobs/${job.id}`} key={job.id}>\n\t\t\t\t\t\t\t\t\t\t<ListGroupItem key={job.title}>{job.title}</ListGroupItem>\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default MainSearch;\n","import React from \"react\";\nimport \"./Home.css\";\n\n/** Home page. If user is logged in, welcomes them by username. */\n\nconst Home = ({ currentUser }) => {\n\treturn (\n\t\t<div className=\"Home-body\">\n\t\t\t<p className=\"font-weight-bold\">Jobly</p>\n\t\t\t<p>All the jobs in one, convenient place.</p>\n\t\t\t{currentUser && (\n\t\t\t\t<p>\n\t\t\t\t\tWelcome back, <b>{currentUser.username}</b>!\n\t\t\t\t</p>\n\t\t\t)}\n\t\t\t{!currentUser && <p>Please, Log in or Sign up to begin.</p>}\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Redirect, useParams, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport \"./SearchCompany.css\";\n\n/* Single company card. */\n\nconst SearchCompany = ({ companies, jobs, cantFind }) => {\n\tconst { handle } = useParams();\n\n\tlet company = companies.find((company) => company.handle === handle);\n\n\t// filter jobs according to company handle to display on company detail page\n\tlet job = jobs.filter((job) => job.companyHandle === company.handle);\n\n\tif (!company) return <Redirect to={cantFind} />;\n\n\treturn (\n\t\t<section>\n\t\t\t<Card className=\"Company\">\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">{company.name}</CardTitle>\n\t\t\t\t\t<CardSubtitle tag=\"h6\" className=\"mb-2 text-muted text-center\">\n\t\t\t\t\t\t{company.description}\n\t\t\t\t\t</CardSubtitle>\n\n\t\t\t\t\t<b>Jobs available: </b>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{job.map((j) => (\n\t\t\t\t\t\t\t<li key={j.id}>\n\t\t\t\t\t\t\t\t<Link to={`/jobs/${j.id}`} key={j.id}>\n\t\t\t\t\t\t\t\t\t<i>{j.title}</i>{\" \"}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default SearchCompany;\n","import React from \"react\";\n\n/** Context: provides hasAppliedToJob, applyToJob object in SearchJob component. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Redirect, useParams, Link } from \"react-router-dom\";\nimport { Card, CardBody, CardTitle, Button } from \"reactstrap\";\nimport \"./SearchJob.css\";\nimport UserContext from \"./UserContext\";\n\n/** Single job card. */\n\nconst SearchJob = ({ jobs, cantFind }) => {\n\tconst { id } = useParams();\n\tconst { hasAppliedToJob, applyToJob } = useContext(UserContext);\n\tconst [ applied, setApplied ] = useState();\n\n\tuseEffect(\n\t\tfunction updatedAppliedStatus () {\n\t\t\tsetApplied(hasAppliedToJob(id));\n\t\t},\n\t\t[ id, hasAppliedToJob ]\n\t);\n\n\t/** Apply for a job */\n\n\tasync function handleApply (e) {\n\t\te.preventDefault();\n\t\tif (hasAppliedToJob(id)) return;\n\t\tapplyToJob(id);\n\t\tsetApplied(true);\n\t}\n\n\tlet job = jobs.find((job) => parseInt(job.id) === parseInt(id));\n\tif (!job) return <Redirect to={cantFind} />;\n\n\treturn (\n\t\t<section>\n\t\t\t<Card className=\"Job\">\n\t\t\t\t<CardBody>\n\t\t\t\t\t<CardTitle className=\"font-weight-bold text-center\">{job.title}</CardTitle>\n\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Salary:</b> {job.salary}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Equity:</b> {job.equity}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<b>Company Name:</b>{\" \"}\n\t\t\t\t\t\t<Link to={`/companies/${job.companyHandle}`}>{job.companyHandle}</Link>\n\t\t\t\t\t</p>\n\t\t\t\t</CardBody>\n\t\t\t\t<Button onClick={handleApply} className=\"Job-btn btn-success\" disabled={applied}>\n\t\t\t\t\t{applied ? \"Applied\" : \"Apply\"}\n\t\t\t\t</Button>\n\t\t\t</Card>\n\t\t</section>\n\t);\n};\n\nexport default SearchJob;\n","import React from \"react\";\n\n/** Alert is custom component to show bootstrap-style alerts. */\n\nconst Alert = ({ type = \"danger\", messages = [] }) => {\n\treturn (\n\t\t<div className={`alert alert-${type}`} role=\"alert\">\n\t\t\t{messages.map((error) => (\n\t\t\t\t<p className=\"mb-0 small\" key={error}>\n\t\t\t\t\t{error}\n\t\t\t\t</p>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../Alert\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport \"./LoginForm.css\";\n\n/** Form to login a user and show homepage at \"/\" . */\n\nconst LoginForm = ({ login }) => {\n\tconst history = useHistory();\n\tconst [ formData, setFormData ] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\"\n\t});\n\tconst [ formErrors, setFormErrors ] = useState([]);\n\n\tasync function handleSubmit (e) {\n\t\te.preventDefault();\n\t\tlet result = await login(formData);\n\t\tif (result.success) {\n\t\t\thistory.push(\"/\");\n\t\t} else {\n\t\t\tsetFormErrors(result.errors);\n\t\t}\n\t}\n\n\tfunction handleChange (e) {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((formData) => ({ ...formData, [name]: value }));\n\t}\n\n\treturn (\n\t\t<div className=\"LoginForm\">\n\t\t\t<Form className=\"Form-body\" onSubmit={handleSubmit}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"username\">Username</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tautoComplete=\"username\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"password\">Password</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t{formErrors.length ? <Alert type=\"danger\" messages={formErrors} /> : null}\n\n\t\t\t\t<Button className=\"btn btn-success float-right\" onSubmit={handleSubmit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default LoginForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../Alert\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport \"./SignupForm.css\";\n\n/** Form to signup a user and save user to db. */\n\nconst SignupForm = ({ signup }) => {\n\tconst history = useHistory();\n\tconst [ formData, setFormData ] = useState({\n\t\tusername: \"\",\n\t\tpassword: \"\",\n\t\tfirstName: \"\",\n\t\tlastName: \"\",\n\t\temail: \"\"\n\t});\n\tconst [ formErrors, setFormErrors ] = useState([]);\n\n\t/** On submit, redirect to homepage \"/\". */\n\n\tasync function handleSubmit (e) {\n\t\te.preventDefault();\n\t\tlet result = await signup(formData);\n\t\tif (result.success) {\n\t\t\thistory.push(\"/\");\n\t\t} else {\n\t\t\tsetFormErrors(result.errors);\n\t\t}\n\t}\n\n\tfunction handleChange (e) {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((formData) => ({ ...formData, [name]: value }));\n\t}\n\n\treturn (\n\t\t<div className=\"SignupForm\">\n\t\t\t<Form className=\"Form-body\" onSubmit={handleSubmit}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"username\">Username</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.username}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"password\">Password</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"firstName\">First Name</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.firstName}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"lastName\">Last Name</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.lastName}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"email\">Email</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\n\t\t\t\t{formErrors.length ? <Alert type=\"danger\" messages={formErrors} /> : null}\n\n\t\t\t\t<Button className=\"btn btn-success float-right\" onSubmit={handleSubmit}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default SignupForm;\n","import React, { useState } from \"react\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./EditProfileForm.css\";\nimport JoblyApi from \"../Api\";\nimport Alert from \"../Alert\";\n\n/** Form to edit user info in db. */\n\nconst EditProfileForm = ({ currentUser }) => {\n\tconst INITIAL_STATE = {\n\t\tusername: currentUser.username,\n\t\tfirstName: currentUser.firstName,\n\t\tlastName: currentUser.lastName,\n\t\temail: currentUser.email,\n\t\tpassword: \"\"\n\t};\n\tconst [ formData, setFormData ] = useState(INITIAL_STATE);\n\tconst [ formErrors, setFormErrors ] = useState([]);\n\tconst [ saveConfirmed, setSaveConfirmed ] = useState(false);\n\n\tconst history = useHistory();\n\n\tconst handleChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((formData) => ({\n\t\t\t...formData,\n\t\t\t[name]: value\n\t\t}));\n\t};\n\n\t/** Submit form and add new user data to db. */\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tlet profileData = {\n\t\t\tfirstName: formData.firstName,\n\t\t\tlastName: formData.lastName,\n\t\t\temail: formData.email,\n\t\t\tpassword: formData.password\n\t\t};\n\t\ttry {\n\t\t\tlet username = currentUser.username;\n\t\t\tlet updatedUser = await JoblyApi.saveProfile(username, profileData);\n\t\t\tconsole.log(updatedUser);\n\t\t} catch (e) {\n\t\t\tsetFormErrors(e);\n\t\t\treturn;\n\t\t}\n\t\tsetFormData((f) => ({ ...f, password: \"\" }));\n\t\tsetFormErrors([]);\n\t\tsetSaveConfirmed(true);\n\n\t\thistory.push(\"/\");\n\t};\n\n\treturn (\n\t\t<div className=\"Form\">\n\t\t\t<Label htmlFor=\"username\">Username</Label>\n\t\t\t<p>\n\t\t\t\t<b>{currentUser.username}</b>\n\t\t\t</p>\n\t\t\t<Form className=\"Form-body\" onSubmit={handleSubmit}>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"firstName\">First Name</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\tvalue={formData.firstName}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"lastName\">Last Name</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\tvalue={formData.lastName}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"email\">Email</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tvalue={formData.email}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t<FormGroup>\n\t\t\t\t\t<Label htmlFor=\"password\">Confirm password to make changes</Label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tclassName=\"Form-input\"\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tvalue={formData.password}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</FormGroup>\n\t\t\t\t{formErrors.length ? <Alert type=\"danger\" messages={formErrors} /> : null}\n\n\t\t\t\t{saveConfirmed ? (\n\t\t\t\t\t<Alert type=\"success\" messages={[ \"Updated successfully.\" ]} />\n\t\t\t\t) : null}\n\t\t\t\t<Button className=\"Form-btn btn-success\">Save</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default EditProfileForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport JoblyApi from \"../Api\";\nimport MainSearch from \"../MainSearch\";\nimport Home from \"../Home\";\nimport SearchCompany from \"../SearchCompany\";\nimport SearchJob from \"../SearchJob\";\nimport LoginForm from \"../forms/LoginForm\";\nimport SignupForm from \"../forms/SignupForm\";\nimport EditProfileForm from \"../forms/EditProfileForm\";\n\n/** Main Routes, some are protected and only accessible to logged in users. \n * If user is not logged in, page redirects to homepage and asks to log in or sign up.\n*/\n\nconst Routes = ({ login, signup, currentUser }) => {\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\tconst [ companies, setCompanies ] = useState([]);\n\tconst [ jobs, setJobs ] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetCompanies();\n\t\tgetJobs();\n\t}, []);\n\tasync function getCompanies (name) {\n\t\tlet companies = await JoblyApi.getCompanies(name);\n\t\tsetCompanies(companies);\n\t\tsetIsLoading(false);\n\t}\n\tasync function getJobs (title) {\n\t\tlet jobs = await JoblyApi.getJobs(title);\n\t\tsetJobs(jobs);\n\t\tsetIsLoading(false);\n\t}\n\tif (isLoading) {\n\t\treturn <p>Loading &hellip;</p>;\n\t}\n\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\">\n\t\t\t\t<Home currentUser={currentUser} />\n\t\t\t</Route>\n\t\t\t{currentUser && (\n\t\t\t\t<Route exact path=\"/companies\">\n\t\t\t\t\t<MainSearch companies={companies} getCompanies={getCompanies} />\n\t\t\t\t</Route>\n\t\t\t)}\n\t\t\t{currentUser && (\n\t\t\t\t<Route exact path=\"/jobs\">\n\t\t\t\t\t<MainSearch jobs={jobs} getJobs={getJobs} />\n\t\t\t\t</Route>\n\t\t\t)}\n\t\t\t{currentUser && (\n\t\t\t\t<Route path=\"/companies/:handle\">\n\t\t\t\t\t<SearchCompany companies={companies} jobs={jobs} cantFind=\"/companies\" />\n\t\t\t\t</Route>\n\t\t\t)}\n\t\t\t{currentUser && (\n\t\t\t\t<Route path=\"/jobs/:id\">\n\t\t\t\t\t<SearchJob jobs={jobs} cantFind=\"/jobs\" />\n\t\t\t\t</Route>\n\t\t\t)}\n\t\t\t<Route path=\"/login\">\n\t\t\t\t<LoginForm login={login} />\n\t\t\t</Route>\n\t\t\t<Route path=\"/signup\">\n\t\t\t\t<SignupForm signup={signup} />\n\t\t\t</Route>\n\t\t\t{currentUser && (\n\t\t\t\t<Route path=\"/profile\">\n\t\t\t\t\t<EditProfileForm currentUser={currentUser} />\n\t\t\t\t</Route>\n\t\t\t)}\n\n\t\t\t<Redirect to=\"/\" />\n\t\t</Switch>\n\t);\n};\n\nexport default Routes;\n","import { useState, useEffect } from \"react\";\n\n/** Custom hook to keep state data synced with localStorage using passed-in key. Defaults to firtsValue if nothing in localStorage. Used with saving user token. */\n\nfunction useLocalStorage (key, firstValue = null) {\n\tconst initialValue = localStorage.getItem(key) || firstValue;\n\n\tconst [ item, setItem ] = useState(initialValue);\n\n\tuseEffect(\n\t\tfunction setKeyInLocalStorage () {\n\t\t\tif (item === null) {\n\t\t\t\tlocalStorage.removeItem(key);\n\t\t\t} else {\n\t\t\t\tlocalStorage.setItem(key, item);\n\t\t\t}\n\t\t},\n\t\t[ key, item ]\n\t);\n\n\treturn [ item, setItem ];\n}\n\nexport default useLocalStorage;\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport NavBar from \"./routes-navbar/NavBar\";\nimport Routes from \"./routes-navbar/Routes\";\nimport { BrowserRouter, Redirect } from \"react-router-dom\";\nimport JoblyApi from \"./Api\";\nimport UserContext from \"./UserContext\";\nimport jwt from \"jsonwebtoken\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\n/** Key name for storing token in localStorage. */\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\n/** Jobly application.\n *\n * - infoLoaded: making sure user data has been pulled out from API.\n *\n * - currentUser: user obj from API. \n *\n * - token: for logged in users, this is their authentication JWT, stored in localStorage.\n */\n\nconst App = () => {\n\tconst [ infoLoaded, setInfoLoaded ] = useState(false);\n\tconst [ applicationIds, setApplicationIds ] = useState(new Set([]));\n\tconst [ currentUser, setCurrentUser ] = useState(null);\n\tconst [ token, setToken ] = useLocalStorage(TOKEN_STORAGE_ID);\n\n\t/** Load user info from API. Until a user is logged in and they have a token,\n\tthis should not run. It only needs to re-run when a user logs out, so\n\tthe value of the token is a dependency for this effect. */\n\n\tuseEffect(\n\t\tfunction loadUserInfo () {\n\t\t\tasync function getCurrentUser () {\n\t\t\t\tif (token) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet { username } = jwt.decode(token);\n\t\t\t\t\t\t// put the token on the Api class so it can use it to call the API.\n\t\t\t\t\t\tJoblyApi.token = token;\n\t\t\t\t\t\tlet currentUser = await JoblyApi.getCurrentUser(username);\n\t\t\t\t\t\tsetCurrentUser(currentUser);\n\t\t\t\t\t\tsetApplicationIds(new Set(currentUser.applications));\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.error(\"App loadUserInfo: problem loading\", err);\n\t\t\t\t\t\tsetCurrentUser(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetInfoLoaded(true);\n\t\t\t}\n\t\t\t/** set infoLoaded to false while async getCurrentUser runs; once the\n\t\t\tdata is fetched, this will be set back\n\t\t\tto false to display Loading... again. */\n\t\t\tsetInfoLoaded(false);\n\t\t\tgetCurrentUser();\n\t\t},\n\t\t[ token ]\n\t);\n\n\t/** Handles user login. */\n\n\tasync function login (loginData) {\n\t\ttry {\n\t\t\tlet token = await JoblyApi.login(loginData);\n\t\t\tsetToken(token);\n\t\t\treturn { success: true };\n\t\t} catch (errors) {\n\t\t\tconsole.error(\"login failed\", errors);\n\t\t\treturn { success: false, errors };\n\t\t}\n\t}\n\n\t/** Handles user signup. */\n\n\tasync function signup (signupData) {\n\t\ttry {\n\t\t\tlet token = await JoblyApi.signup(signupData);\n\t\t\tsetToken(token);\n\t\t\treturn { success: true };\n\t\t} catch (errors) {\n\t\t\tconsole.error(\"signup failed\", errors);\n\t\t\treturn { success: false, errors };\n\t\t}\n\t}\n\n\t/** Checks if a job has been applied for. */\n\n\tconst hasAppliedToJob = (id) => {\n\t\treturn applicationIds.has(id);\n\t};\n\n\t/** Apply to a job: makes API call and updates set of application IDs. */\n\n\tconst applyToJob = (id) => {\n\t\tif (hasAppliedToJob(id)) return;\n\t\tJoblyApi.applyToJob(currentUser.username, id);\n\t\tsetApplicationIds(new Set([ ...applicationIds, id ]));\n\t};\n\n\t/** Handles user logout. */\n\n\tconst logout = () => {\n\t\tsetCurrentUser(null);\n\t\tsetToken(null);\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<UserContext.Provider value={{ hasAppliedToJob, applyToJob }}>\n\t\t\t\t\t<NavBar currentUser={currentUser} logout={logout} />\n\t\t\t\t\t<Routes\n\t\t\t\t\t\tlogin={login}\n\t\t\t\t\t\tsignup={signup}\n\t\t\t\t\t\tlogout={logout}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t/>\n\t\t\t\t\t{!infoLoaded && <Redirect to=\"/\" />}\n\t\t\t\t</UserContext.Provider>\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}